<launch>
    <!-- TF for world-->
    <!-- 统一mavros发布的map系与world系 -->
    <node pkg="tf" type="static_transform_publisher" name="tf_world_map"
          args="0 0 0 0 0 0 world map 100"/>

    <!-- ORB_SLAM的地图坐标系与map坐标系之间的转换关系 -->
    <node pkg="tf" type="static_transform_publisher" name="tf_slam2map"
          args="0 0 0 0 0 0 map camera_init 100"/>

    <!-- filter lidar -->
<!--    <node pkg="laser_filters" type="scan_to_scan_filter_chain" output="screen" name="laser_filter">-->
<!--        <rosparam command="load" file="$(find ego_planner)/config/filter_lidar.yaml"/>-->
<!--    </node>-->

	<!-- run the laser_to_pointcloud -->
<!--    <node pkg="prometheus_plan_manage" type="laser_to_pointcloud.py" name="laser_to_pointcloud" >-->
<!--    </node>-->

    <!-- Launch file for velodyne16 VLP-16 LiDAR -->
    <rosparam command="load" file="$(find fast_lio)/config/velodyne.yaml" />

    <node pkg="fast_lio" type="fastlio_mapping" name="laserMapping" output="screen" required="true" launch-prefix="gdb -ex run --args">
<!--    <node pkg="fast_lio" type="fastlio_mapping" name="laserMapping" output="screen" required="true" launch-prefix="gnome-terminal &#45;&#45;">-->
        <param name="feature_extract_enable" type="bool" value="0"/>
        <param name="point_filter_num" type="int" value="4"/>
        <param name="map_file_path" type="string" value=" " />
        <param name="max_iteration" type="int" value="4" />
<!--        <param name="dense_map_enable" type="bool" value="1" />-->
        <param name="filter_size_corner" type="double" value="0.2" />
        <param name="filter_size_surf" type="double" value="0.2" />
        <param name="filter_size_map" type="double" value="0.5" />
        <param name="runtime_pos_log_enable" type="bool" value="1" />
        <param name="cube_side_length" type="double" value="2000" />
    </node>
</launch>
